import pygame
from PascalTriangle import computePascalsTriangle

rows = 1000

factor = 216

colours = (
    (255, 255, 255),
    (255, 0, 0),
    (0, 255, 0),
    (0, 0, 255),
    (0, 255, 255),
    (255, 0, 255),
    (255, 255, 0),

    (128, 128, 128),
    (128, 0, 0),
    (0, 128, 0),
    (0, 0, 128),
    (0, 128, 128),
    (128, 0, 128),
    (0, 128, 128),

    (64, 64, 64),
    (64, 0, 0),
    (0, 64, 0),
    (0, 0, 64),
    (0, 64, 64),
    (64, 0, 64),
    (0, 64, 64),

    (192, 192, 192),
    (192, 0, 0),
    (0, 192, 0),
    (0, 0, 192),
    (0, 192, 192),
    (192, 0, 192),
    (0, 192, 192),

    (32, 32, 32),
    (32, 0, 0),
    (0, 32, 0),
    (0, 0, 32),
    (0, 32, 32),
    (32, 0, 32),
    (0, 32, 32),

    (96, 96, 96),
    (96, 0, 0),
    (0, 96, 0),
    (0, 0, 96),
    (0, 96, 96),
    (96, 0, 96),
    (0, 96, 96),

    (160, 160, 160),
    (160, 0, 0),
    (0, 160, 0),
    (0, 0, 160),
    (0, 160, 160),
    (160, 0, 160),
    (0, 160, 160),

    (224, 224, 224),
    (224, 0, 0),
    (0, 224, 0),
    (0, 0, 224),
    (0, 224, 224),
    (224, 0, 224),
    (0, 224, 224),

    (16, 16, 16),
    (16, 0, 0),
    (0, 16, 0),
    (0, 0, 16),
    (0, 16, 16),
    (16, 0, 16),
    (0, 16, 16),

    (48, 48, 48),
    (48, 0, 0),
    (0, 48, 0),
    (0, 0, 48),
    (0, 48, 48),
    (48, 0, 48),
    (0, 48, 48),

    (80, 80, 80),
    (80, 0, 0),
    (0, 80, 0),
    (0, 0, 80),
    (0, 80, 80),
    (80, 0, 80),
    (0, 80, 80),

    (112, 112, 112),
    (112, 0, 0),
    (0, 112, 0),
    (0, 0, 112),
    (0, 112, 112),
    (112, 0, 112),
    (0, 112, 112),

    (144, 144, 144),
    (144, 0, 0),
    (0, 144, 0),
    (0, 0, 144),
    (0, 144, 144),
    (144, 0, 144),
    (0, 144, 144),

    (176, 176, 176),
    (176, 0, 0),
    (0, 176, 0),
    (0, 0, 176),
    (0, 176, 176),
    (176, 0, 176),
    (0, 176, 176),

    (208, 208, 208),
    (208, 0, 0),
    (0, 208, 0),
    (0, 0, 208),
    (0, 208, 208),
    (208, 0, 208),
    (0, 208, 208),

    (240, 240, 240),
    (240, 0, 0),
    (0, 240, 0),
    (0, 0, 240),
    (0, 240, 240),
    (240, 0, 240),
    (0, 240, 240),

    (8, 8, 8),
    (8, 0, 0),
    (0, 8, 0),
    (0, 0, 8),
    (0, 8, 8),
    (8, 0, 8),
    (8, 8, 0),

    (24, 24, 24),
    (24, 0, 0),
    (0, 24, 0),
    (0, 0, 24),
    (0, 24, 24),
    (24, 0, 24),
    (24, 24, 0),

    (40, 40, 40),
    (40, 0, 0),
    (0, 40, 0),
    (0, 0, 40),
    (0, 40, 40),
    (40, 0, 40),
    (40, 40, 0),

    (56, 56, 56),
    (56, 0, 0),
    (0, 56, 0),
    (0, 0, 56),
    (0, 56, 56),
    (56, 0, 56),
    (56, 56, 0),

    (72, 72, 72),
    (72, 0, 0),
    (0, 72, 0),
    (0, 0, 72),
    (0, 72, 72),
    (72, 0, 72),
    (72, 72, 0),

    (88, 88, 88),
    (88, 0, 0),
    (0, 88, 0),
    (0, 0, 88),
    (0, 88, 88),
    (88, 0, 88),
    (88, 88, 0),

    (104, 104, 104),
    (104, 0, 0),
    (0, 104, 0),
    (0, 0, 104),
    (0, 104, 104),
    (104, 0, 104),
    (104, 104, 0),

    (120, 120, 120),
    (120, 0, 0),
    (0, 120, 0),
    (0, 0, 120),
    (0, 120, 120),
    (120, 0, 120),
    (120, 120, 0),

    (136, 136, 136),
    (136, 0, 0),
    (0, 136, 0),
    (0, 0, 136),
    (0, 136, 136),
    (136, 0, 136),
    (136, 136, 0),

    (152, 152, 152),
    (152, 0, 0),
    (0, 152, 0),
    (0, 0, 152),
    (0, 152, 152),
    (152, 0, 152),
    (152, 152, 0),

    (168, 168, 168),
    (168, 0, 0),
    (0, 168, 0),
    (0, 0, 168),
    (0, 168, 168),
    (168, 0, 168),
    (168, 168, 0),

    (184, 184, 184),
    (184, 0, 0),
    (0, 184, 0),
    (0, 0, 184),
    (0, 184, 184),
    (184, 0, 184),
    (184, 184, 0),

    (200, 200, 200),
    (200, 0, 0),
    (0, 200, 0),
    (0, 0, 200),
    (0, 200, 200),
    (200, 0, 200),
    (200, 200, 0),

    (216, 216, 216),
    (216, 0, 0),
    (0, 216, 0),
    (0, 0, 216),
    (0, 216, 216),
    (216, 0, 216),
    (216, 216, 0),

    (232, 232, 232),
    (232, 0, 0),
    (0, 232, 0),
    (0, 0, 232),
    (0, 232, 232),
    (232, 0, 232),
    (232, 232, 0),

    (248, 248, 248),
    (248, 0, 0),
    (0, 248, 0),
    (0, 0, 248),
    (0, 248, 248),
    (248, 0, 248),
    (248, 248, 0),

    (0, 0, 0)
)

triangle = computePascalsTriangle(rows)

pygame.init()

screen = pygame.display.set_mode((1100, 1100))

screen.fill((255, 255, 255))

pygame.display.update()

for i in range(len(triangle)):

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            quit()

    for j in range(len(triangle[i])):
        colouringFactor = triangle[i][j] % factor
        if colouringFactor == (factor - 1):
            colouringFactor = -1

        pygame.draw.line(screen, colours[colouringFactor], (j, i), (j, i))

    pygame.display.update()

print("Process complete")

while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            quit()

